services:
  - type: web
    name: autoagent-mf
    runtime: docker
    repo: https://github.com/daggerfall666/AutoAgent_MF
    dockerfilePath: ./Dockerfile
    port: 12346
    envVars:
      - key: COMPLETION_MODEL
        value: claude-3-5-sonnet-20241022
      - key: DEBUG
        value: false
      - key: FN_CALL
        value: ""
      - key: API_BASE_URL
        value: ""
      - key: GITHUB_AI_TOKEN
        fromSecret: github_ai_token
      - key: OPENAI_API_KEY
        fromSecret: openai_api_key
      - key: ANTHROPIC_API_KEY
        fromSecret: anthropic_api_key
      - key: DEEPSEEK_API_KEY
        fromSecret: deepseek_api_key
      - key: GEMINI_API_KEY
        fromSecret: gemini_api_key
      - key: HUGGINGFACE_API_KEY
        fromSecret: huggingface_api_key
      - key: GROQ_API_KEY
        fromSecret: groq_api_key
      - key: XAI_API_KEY
        fromSecret: xai_api_key
      - key: MISTRAL_API_KEY
        fromSecret: mistral_api_key
      - key: OPENROUTER_API_KEY
        fromSecret: openrouter_api_key
    buildCommand: |
      # Instalar Docker se não estiver disponível
      if ! command -v docker &> /dev/null; then
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
      fi
      
      # Instalar dependências Python
      pip install -e .
      
      # Verificar se o Docker daemon está a correr
      service docker start || true
    startCommand: |
      # Iniciar o serviço principal do AutoAgent
      auto main --port 12346 --container_name autoagent_render
    healthCheckPath: /health
    
  # Serviço alternativo para modo Deep Research apenas
  - type: web
    name: autoagent-deep-research
    runtime: docker
    repo: https://github.com/daggerfall666/AutoAgent_MF
    dockerfilePath: ./Dockerfile
    port: 12347
    envVars:
      - key: COMPLETION_MODEL
        value: claude-3-5-sonnet-20241022
      - key: DEBUG
        value: false
      - key: ANTHROPIC_API_KEY
        fromSecret: anthropic_api_key
      - key: OPENAI_API_KEY
        fromSecret: openai_api_key
    buildCommand: |
      pip install -e .
    startCommand: |
      auto deep-research --port 12347 --container_name deepresearch_render
    healthCheckPath: /health
    
# Dockerfile alternativo se não existir no repositório
dockerfile: |
  FROM python:3.11-slim
  
  # Instalar dependências do sistema
  RUN apt-get update && apt-get install -y \
      git \
      docker.io \
      curl \
      build-essential \
      && rm -rf /var/lib/apt/lists/*
  
  # Criar directório de trabalho
  WORKDIR /app
  
  # Copiar ficheiros do projecto
  COPY . .
  
  # Instalar dependências Python
  RUN pip install --no-cache-dir -e .
  
  # Expor porta
  EXPOSE 12346
  
  # Comando por defeito
  CMD ["auto", "main", "--port", "12346"]

# Configurações adicionais
databases:
  # Se precisar de base de dados para vector storage
  - name: autoagent-vectordb
    plan: starter
    
# Cron jobs para limpeza periódica
jobs:
  - type: cron
    name: cleanup-containers
    schedule: "0 2 * * *"  # Todos os dias às 2h
    dockerfilePath: ./Dockerfile
    shellCommand: |
      # Limpar containers Docker antigos
      docker system prune -f
